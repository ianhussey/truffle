% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snuffle_sum_scores.R
\name{snuffle_sum_scores}
\alias{snuffle_sum_scores}
\title{Score Likert-style items with cleaning, optional reverse-scoring, and diagnostics}
\usage{
snuffle_sum_scores(
  .data,
  scale_identifier,
  min,
  max,
  impute = FALSE,
  id_col = NULL,
  regex = FALSE,
  output_prefix = NULL,
  reverse = NULL,
  reverse_regex = FALSE
)
}
\arguments{
\item{.data}{A data frame or tibble of responses.}

\item{scale_identifier}{Character; prefix or regex used to select item columns (see \code{regex}).}

\item{min, max}{Integer-like lower/upper bounds (inclusive) for valid responses.}

\item{impute}{Logical; if \code{TRUE}, impute sum scores using participant's mean score. If \code{FALSE},
only participants without complete and possible data have sum score = \code{NA}.}

\item{id_col}{Optional character: name of a unique identifier column to check for duplicates.}

\item{regex}{Logical; if \code{TRUE}, treat \code{scale_identifier} as a regex; otherwise as a prefix.}

\item{output_prefix}{Optional character used to name derived columns. Defaults to \code{scale_identifier}.}

\item{reverse}{Optional character vector of item names to reverse, or a regex pattern
when \code{reverse_regex = TRUE}.}

\item{reverse_regex}{Logical; if \code{TRUE}, interpret \code{reverse} as a regex over selected items.}
}
\value{
A tibble containing the original data plus:
\itemize{
\item \verb{<prefix>sumscore} — sum score over available items (\code{NA} if all missing)
\item \verb{<prefix>complete_data} — are all items per row non-missing and possible
\item \verb{<prefix>nonmissing_n} — count of non-missing items per row.
\item \verb{<prefix>impossible_n} — row-wise count of impossible values observed pre-cleaning.
\item \verb{<prefix>impossible_items} — row-wise comma-separated list of items with impossible values.
\item \verb{<prefix>items} — comma-separated list of items included.
\item \verb{<prefix>items_reversed} — comma-separated list of reversed items (constant per row).
}
}
\description{
Cleans out-of-range values to \code{NA}, optionally reverse-scores a subset of items,
and computes row-wise \strong{sum scores} and \strong{non-missing item counts}, implicitly imputing
missing data from each participant's mean. Also returns diagnostics about impossible values
observed in the raw data.
}
\details{
\strong{Processing order:} diagnostics on raw data → clean impossible values → reverse-score →
compute sums and counts → attach diagnostics. All selected items must be numeric and integer-like.
A single common \verb{[min, max]} is assumed across all selected items.
If \code{id_col} is supplied, the function aborts on duplicate IDs.
}
\examples{
\dontrun{
dat <- tibble::tibble(
  id = 1:3,
  bfi_1 = c(1, 2, 6),  # 6 is invalid -> NA
  bfi_2 = c(3, NA, 4),
  bfi_3 = c(5, 4, 2)
)

snuffle_sum_scores(dat, "bfi_", min = 1, max = 5, id_col = "id")
}

}
